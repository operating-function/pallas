"use strict";(self.webpackChunkpallas=self.webpackChunkpallas||[]).push([[382],{8860:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>d,toc:()=>o});var r=s(4848),i=s(8453);const l={},a="Rows",d={id:"reference/standard-library/rows",title:"Rows",description:"This page is under active development. It may contain bugs or incomplete descriptions.",source:"@site/../../doc/reference/standard-library/05_rows.md",sourceDirName:"reference/standard-library",slug:"/reference/standard-library/rows",permalink:"/docs/reference/standard-library/rows",draft:!1,unlisted:!1,editUrl:"https://github.com/operating-function/pallas/edit/main/doc/../../doc/reference/standard-library/05_rows.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{},sidebar:"referenceSidebar",previous:{title:"Characters and Strings",permalink:"/docs/reference/standard-library/characters-strings"},next:{title:"Lists",permalink:"/docs/reference/standard-library/lists"}},c={},o=[{value:"null",id:"null",level:3},{value:"arity",id:"arity",level:3},{value:"len",id:"len",level:3},{value:"idx",id:"idx",level:3},{value:"last",id:"last",level:3},{value:"get",id:"get",level:3},{value:"mut",id:"mut",level:3},{value:"put",id:"put",level:3},{value:"switch",id:"switch",level:3},{value:"c0, c1, c2, c3, c4, c5, c6, c7, c8, c9",id:"c0-c1-c2-c3-c4-c5-c6-c7-c8-c9",level:3},{value:"v0, v1, v2, v3, v4, v5, v6, v7, v8, v9",id:"v0-v1-v2-v3-v4-v5-v6-v7-v8-v9",level:3},{value:"isRow",id:"isrow",level:3},{value:"foldr",id:"foldr",level:3},{value:"foldl",id:"foldl",level:3},{value:"foldr1",id:"foldr1",level:3},{value:"unfoldr",id:"unfoldr",level:3},{value:"strictRow",id:"strictrow",level:3},{value:"weld",id:"weld",level:3},{value:"gen",id:"gen",level:3},{value:"fst",id:"fst",level:3},{value:"snd",id:"snd",level:3},{value:"thr",id:"thr",level:3},{value:"map",id:"map",level:3},{value:"foreach",id:"foreach",level:3},{value:"rev",id:"rev",level:3},{value:"curry",id:"curry",level:3},{value:"uncurry",id:"uncurry",level:3},{value:"rowCons",id:"rowcons",level:3},{value:"rowSnoc",id:"rowsnoc",level:3},{value:"rowApply",id:"rowapply",level:3},{value:"rowRepel",id:"rowrepel",level:3},{value:"slash",id:"slash",level:3},{value:"slice",id:"slice",level:3},{value:"chunks",id:"chunks",level:3},{value:"rep",id:"rep",level:3},{value:"rowIndexed",id:"rowindexed",level:3},{value:"findIdx",id:"findidx",level:3},{value:"elemIdx",id:"elemidx",level:3},{value:"has",id:"has",level:3},{value:"rowAnd",id:"rowand",level:3},{value:"rowOr",id:"rowor",level:3},{value:"sum",id:"sum",level:3},{value:"sumOf",id:"sumof",level:3},{value:"all",id:"all",level:3},{value:"any",id:"any",level:3},{value:"zip",id:"zip",level:3},{value:"zipWith",id:"zipwith",level:3},{value:"cat",id:"cat",level:3},{value:"catMap",id:"catmap",level:3},{value:"take",id:"take",level:3},{value:"drop",id:"drop",level:3},{value:"rev",id:"rev-1",level:3},{value:"span",id:"span",level:3},{value:"splitAt",id:"splitat",level:3},{value:"intersperse",id:"intersperse",level:3},{value:"insert",id:"insert",level:3},{value:"Sorting and Filtering",id:"sorting-and-filtering",level:2},{value:"sort",id:"sort",level:3},{value:"sortBy",id:"sortby",level:3},{value:"sortOn",id:"sorton",level:3},{value:"sortUniq",id:"sortuniq",level:3},{value:"filter",id:"filter",level:3},{value:"delete",id:"delete",level:3},{value:"findIdxMany",id:"findidxmany",level:3},{value:"elemIdxMany",id:"elemidxmany",level:3}];function t(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"rows",children:"Rows"})}),"\n",(0,r.jsxs)(n.admonition,{title:"Under Construction",type:"warning",children:[(0,r.jsx)(n.p,{children:"This page is under active development. It may contain bugs or incomplete descriptions."}),(0,r.jsx)(n.p,{children:"TODO: Update with function and type signatures."})]}),"\n",(0,r.jsxs)(n.p,{children:["This module defines operations on rows, which are ",(0,r.jsx)(n.a,{href:"#",children:"TODO TK: data-jetted"})," arrays. Since PLAN is untyped, these are also used as the building blocks for tuples, records, and datatypes."]}),"\n",(0,r.jsxs)(n.p,{children:["They are defined with ",(0,r.jsx)(n.code,{children:"[]"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"arr=[10 64 42]\n\narr\n[10 64 42]\n"})}),"\n",(0,r.jsx)(n.h3,{id:"null",children:"null"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(null xs)\n> xs : Row a\n> Bool\n"})}),"\n",(0,r.jsx)(n.p,{children:"Checks if a row is empty."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"null"})," returns ",(0,r.jsx)(n.code,{children:"TRUE"})," if the given row is empty, and ",(0,r.jsx)(n.code,{children:"FALSE"})," otherwise."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"null []         == 1\nnull [1 2 3]    == 0\nnull [0]        == 0\n"})}),"\n",(0,r.jsx)(n.h3,{id:"arity",children:"arity"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(arity x)\n> x : a\n> Nat\n"})}),"\n",(0,r.jsx)(n.p,{children:"Returns the arity of a function or row."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"arity"})," returns the number of arguments a function takes, or the number of elements in a row plus one."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"arity add        == 2\narity [1 2 3]    == 4\narity []         == 1\n"})}),"\n",(0,r.jsx)(n.h3,{id:"len",children:"len"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(len xs)\n> xs : Row a\n> Nat\n"})}),"\n",(0,r.jsx)(n.p,{children:"Returns the length of a row."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"len"})," counts the number of elements in a given row."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"len [1 2 3]    == 3\nlen []         == 0\nlen [9]        == 1\n"})}),"\n",(0,r.jsx)(n.h3,{id:"idx",children:"idx"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(idx i xs)\n> i  : Nat\n> xs : Row a\n> a\n"})}),"\n",(0,r.jsx)(n.p,{children:"Retrieves an element from a row at a specified index."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"idx"})," returns the element at the given index in the row. Indexing starts at 0."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"idx 1 [10 20 30]    == 20\nidx 0 [5 6 7]       == 5\nidx 2 [1]           == 0 (out of bounds)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"last",children:"last"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(last xs)\n> xs : Row a\n> a\n"})}),"\n",(0,r.jsx)(n.p,{children:"Retrieves an element from the end of a row."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"last [10 20 30]    == 30\nlast [5 6 7]       == 7\nlast [] 2          == 0\n"})}),"\n",(0,r.jsx)(n.h3,{id:"get",children:"get"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(get xs i)\n> xs : Row a\n> i  : Nat\n> a\n"})}),"\n",(0,r.jsx)(n.p,{children:"Retrieves an element from a row at a specified index."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"get"})," is an alias for ",(0,r.jsx)(n.code,{children:"idx"}),". It returns the element at the given index in the row."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"get [10 20 30] 1    == 20\nget [5 6 7] 0       == 5\nget [1] 2           == 0 (out of bounds)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"mut",children:"mut"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(mut i v xs)\n> i  : Nat\n> v  : a\n> xs : Row a\n> Row a\n"})}),"\n",(0,r.jsx)(n.p,{children:"Modifies an element in a row at a specified index."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"mut"})," returns a new row with the element at the given index replaced by the provided value."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"mut 1 99 [10 20 30]    == [10 99 30]\nmut 0 5 [1 2 3]        == [5 2 3]\nmut 3 4 [1 2]          == [1 2 0 4]\n"})}),"\n",(0,r.jsx)(n.h3,{id:"put",children:"put"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(put xs i v)\n> xs : Row a\n> i  : Nat\n> v  : a\n> Row a\n"})}),"\n",(0,r.jsx)(n.p,{children:"Modifies an element in a row at a specified index."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"put"})," is an alias for ",(0,r.jsx)(n.code,{children:"mut"}),". It returns a new row with the element at the given index replaced by the provided value."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"put [10 20 30] 1 99    == [10 99 30]\nput [1 2 3] 0 5        == [5 2 3]\nput [1 2] 3 4          == [1 2 0 4]\n"})}),"\n",(0,r.jsx)(n.h3,{id:"switch",children:"switch"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(switch i d xs)\n> i  : Nat\n> d  : b\n> xs : Row a\n> a\n"})}),"\n",(0,r.jsx)(n.p,{children:"Selects a value from a row based on an index, with a fallback value."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"switch"})," returns the element at the given index if it exists, otherwise it returns the fallback value."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"switch 1 0 [10 20 30]    == 20\nswitch 3 0 [10 20 30]    == 0 (fallback)\nswitch 0 99 []           == 99 (fallback)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"c0-c1-c2-c3-c4-c5-c6-c7-c8-c9",children:"c0, c1, c2, c3, c4, c5, c6, c7, c8, c9"}),"\n",(0,r.jsx)(n.p,{children:"Creates a row constructor of the specified arity."}),"\n",(0,r.jsx)(n.p,{children:"These functions create row constructors of arity 0 to 9 respectively."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"c3 1 2 3      == [3 2 1]\nc0            == []\nc2 b#a b#b    == [b#b b#a]\n"})}),"\n",(0,r.jsx)(n.h3,{id:"v0-v1-v2-v3-v4-v5-v6-v7-v8-v9",children:"v0, v1, v2, v3, v4, v5, v6, v7, v8, v9"}),"\n",(0,r.jsx)(n.p,{children:"Creates a row of the specified arity."}),"\n",(0,r.jsx)(n.p,{children:"These functions create rows of arity 0 to 9 respectively, with the arguments in reverse order."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"v3 1 2 3      == [1 2 3]\nv0            == []\nv2 b#a b#b    == [b#a b#b]\n"})}),"\n",(0,r.jsx)(n.h3,{id:"isrow",children:"isRow"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(isRow x)\n> x : a\n> Bool\n"})}),"\n",(0,r.jsx)(n.p,{children:"Checks if a value is a row."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"isRow"})," returns ",(0,r.jsx)(n.code,{children:"TRUE"})," if the given value is a row, and ",(0,r.jsx)(n.code,{children:"FALSE"})," otherwise."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"isRow [1 2 3]    == 1\nisRow []         == 1\nisRow 3          == 0\n"})}),"\n",(0,r.jsx)(n.h3,{id:"foldr",children:"foldr"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(foldr f xs)\n> f  : (a > b)\n> xs : Row a\n> b\n"})}),"\n",(0,r.jsx)(n.p,{children:"Folds a row from right to left."}),"\n",(0,r.jsx)(n.p,{children:"foldr applies a binary function to a starting value (from the right) and all elements of the row, going from right to left."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"foldr sub 0 [1 2 3]    == 1\nfoldr v2 [] [1 2 3]    == [1 [2 [3 []]]]\nfoldr add 0 []         == 0\n"})}),"\n",(0,r.jsx)(n.h3,{id:"foldl",children:"foldl"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(foldl f xs)\n> f  : (a > b)\n> xs : Row a\n> b\n"})}),"\n",(0,r.jsx)(n.p,{children:"Folds a row from left to right."}),"\n",(0,r.jsx)(n.p,{children:"foldl applies a binary function to a starting value (from the left) and all elements of the row, going from left to right."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"foldl sub 0 [1 2 3]    == 0\nfoldl v2 [] [1 2 3]    == [[[[] 1] 2] 3]\nfoldl add 0 [1]        == 1\n"})}),"\n",(0,r.jsx)(n.h3,{id:"foldr1",children:"foldr1"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"(foldr1 f xs)\n> f  : (a > b)\n> xs : Row a\n> b\n"})}),"\n",(0,r.jsx)(n.p,{children:"Folds a non-empty row from right to left using the last element as the initial accumulator."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"foldr1 sub [1 2 3 10]        == 0\nfoldr1 strWeld [%a %b %c]    == %abc\nfoldr1 max [1 5 3 2]         == 5\n"})}),"\n",(0,r.jsx)(n.h3,{id:"unfoldr",children:"unfoldr"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(unfoldr f s)\n> f : (a > b)\n> s : a\n> a\n"})}),"\n",(0,r.jsx)(n.p,{children:"Builds a row from a seed value using a function that returns either a value and a new seed, or nothing."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"unfoldr n&(if (gth n 0) (SOME [n dec-n]) NONE) 5    == [5 4 3 2 1]\nunfoldr n&(if (lth n 3) (SOME [n inc-n]) NONE) 0    == [0 1 2]\nunfoldr _&NONE 0                                    == []\n"})}),"\n",(0,r.jsx)(n.h3,{id:"strictrow",children:"strictRow"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(strictRow x)\n> x : a\n> Row a\n"})}),"\n",(0,r.jsx)(n.p,{children:"Forces evaluation of all elements in a row."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"strictRow [1 2 3]                  == [1 2 3] ; ensures all elements are evaluated\nstrictRow (map (mul 2) [1 2 3])    == [2 4 6] ; forces computation\nstrictRow []                       == []\n"})}),"\n",(0,r.jsx)(n.h3,{id:"weld",children:"weld"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(weld xs ys)\n> xs : Row a\n> ys : Row a\n> Row a\n"})}),"\n",(0,r.jsx)(n.p,{children:"Concatenates two rows."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"weld"})," combines two rows into a single row, with the elements of the first row followed by the elements of the second row."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"weld [1 2] [3 4]    == [1 2 3 4]\nweld [] [5 6]       == [5 6]\nweld [1 2] []       == [1 2]\n"})}),"\n",(0,r.jsx)(n.h3,{id:"gen",children:"gen"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(gen l f)\n> l : Nat\n> f : (Nat > a)\n> Row a\n"})}),"\n",(0,r.jsx)(n.p,{children:"Generates a row based on a function and a length."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"gen"})," creates a row of the specified length, where each element is the result of applying the given function to its index."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"gen 3 (add 2)    == [2 3 4]\ngen 4 id         == [0 1 2 3]\ngen 0 | mul 2    == []\n"})}),"\n",(0,r.jsx)(n.h3,{id:"fst",children:"fst"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(fst xs)\n> xs : Row a\n> a\n"})}),"\n",(0,r.jsx)(n.p,{children:"Returns the first element of a row."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"fst"})," retrieves the leftmost element of a given row."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"fst [1 2 3]    == 1\nfst [9]        == 9\nfst []         == 0\n"})}),"\n",(0,r.jsx)(n.h3,{id:"snd",children:"snd"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(snd xs)\n> xs : Row a\n> a\n"})}),"\n",(0,r.jsx)(n.p,{children:"Returns the second element of a row."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"snd"})," retrieves the second element of a given row. If the row has fewer than two elements, it returns 0."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"snd [1 2 3]    == 2\nsnd [9]        == 0\nsnd []         == 0\n"})}),"\n",(0,r.jsx)(n.h3,{id:"thr",children:"thr"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(thr xs)\n> xs : Row a\n> a\n"})}),"\n",(0,r.jsx)(n.p,{children:"Returns the third element of a row."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"thr"})," retrieves the third element of a given row. If the row has fewer than three elements, it returns 0."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"thr [1 2 3 4]    == 3\nthr [1 2]        == 0\nthr []           == 0\n"})}),"\n",(0,r.jsx)(n.h3,{id:"map",children:"map"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(map f xs)\n> f  : (a > b)\n> xs : Row a\n> Row b\n"})}),"\n",(0,r.jsx)(n.p,{children:"Applies a function to each element of a row."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"map"})," creates a new row by applying the given function to each element of the input row."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"map (mul 2) [1 2 3]            == [2 4 6]\nmap fst [[1 2] [3 4] [5 6]]    == [1 3 5]\nmap (add 1) []                 == []\n"})}),"\n",(0,r.jsx)(n.h3,{id:"foreach",children:"foreach"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(foreach xs f)\n> xs : Row a\n> f  : (a > b)\n> Row b\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Alias for ",(0,r.jsx)(n.code,{children:"map"})," with arguments reversed."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"foreach"})," is an alias for ",(0,r.jsx)(n.code,{children:"map"}),". It applies a function to each element of a row."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"foreach [1 2 3] (mul 2)            == [2 4 6]\nforeach [[1 2] [3 4] [5 6]] fst    == [1 3 5]\nforeach [] (add 1)                 == []\n"})}),"\n",(0,r.jsx)(n.h3,{id:"rev",children:"rev"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(rev xs)\n> xs : Row a\n> Row a\n"})}),"\n",(0,r.jsx)(n.p,{children:"Reverses a row."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"rev"})," creates a new row with the elements of the input row in reverse order."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"rev [1 2 3]    == [3 2 1]\nrev [9]        == [9]\nrev []         == []\n"})}),"\n",(0,r.jsx)(n.h3,{id:"curry",children:"curry"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(curry f x y)\n> f : (Row a > b)\n> x : a\n> y : a\n> a\n"})}),"\n",(0,r.jsx)(n.p,{children:"Converts a function that takes a row to a curried function."}),"\n",(0,r.jsx)(n.p,{children:"curry takes a function that expects a row as its argument and returns a function that takes two arguments separately."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"See the function definition in sire/sire_05_row.sire.\n"})}),"\n",(0,r.jsx)(n.h3,{id:"uncurry",children:"uncurry"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(uncurry f xs)\n> f  : (a > a)\n> xs : Row a\n> f (Row a)\n"})}),"\n",(0,r.jsx)(n.p,{children:"Converts a curried function to a function that takes a row."}),"\n",(0,r.jsx)(n.p,{children:"uncurry takes a function that expects two separate arguments and returns a function that takes a row of two elements."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"uncurry add [1 2]    == 3\nuncurry sub [5 3]    == 2\nuncurry v2 [1 2]     == [1 2]\n"})}),"\n",(0,r.jsx)(n.h3,{id:"rowcons",children:"rowCons"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(rowCons e xs)\n> e  : a\n> xs : Row a\n> Row a\n"})}),"\n",(0,r.jsx)(n.p,{children:"Prepends an element to a row."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"rowCons"})," creates a new row with the given element as the first element, followed by all elements of the input row."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"rowCons 1 [2 3]    == [1 2 3]\nrowCons b#a []     == [b#a]\nrowCons 0 [1]      == [0 1]\n"})}),"\n",(0,r.jsx)(n.h3,{id:"rowsnoc",children:"rowSnoc"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(rowSnoc xs e)\n> xs : Row a\n> e  : a\n> Row a\n"})}),"\n",(0,r.jsx)(n.p,{children:"Appends an element to a row."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"rowSnoc"})," creates a new row with all elements of the input row, followed by the given element as the last element."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"rowSnoc [1 2] 3    == [1 2 3]\nrowSnoc [] b#a     == [b#a]\nrowSnoc [0] 1      == [0 1]\n"})}),"\n",(0,r.jsx)(n.h3,{id:"rowapply",children:"rowApply"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(rowApply f xs)\n> f  : (a > b)\n> xs : Row a\n> b\n"})}),"\n",(0,r.jsx)(n.p,{children:"Applies a function to a row of arguments."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"rowApply"})," takes a function and a row of arguments, and applies the function to those arguments."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"rowApply add [2 3]    == 5\nrowApply gte [3 4]    == 0\nrowApply lte [3 4]    == 1\n"})}),"\n",(0,r.jsx)(n.h3,{id:"rowrepel",children:"rowRepel"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(rowRepel f xs)\n> f  : (a > b)\n> xs : Row a\n> b\n"})}),"\n",(0,r.jsx)(n.p,{children:"Applies a function to a row of arguments in reverse order."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"rowRepel"})," takes a function and a row of arguments, and applies the function to those arguments in reverse order."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"rowRepel add [2 3]    == 5\nrowRepel gte [3 4]    == 1\nrowRepel lte [3 4]    == 0\n"})}),"\n",(0,r.jsx)(n.h3,{id:"slash",children:"slash"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(slash xs s e)\n> xs : Row a\n> s  : Nat\n> e  : Nat\n> a\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Extracts a slice from a row, from index ",(0,r.jsx)(n.code,{children:"s"})," to index ",(0,r.jsx)(n.code,{children:"e"}),", padding with zeros if necessary."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"slash [1 2 3 4 5] 1 3    == [2 3]\nslash [1 2 3] 0 5        == [1 2 3 0 0]\nslash [1 2 3] 2 2        == []\n"})}),"\n",(0,r.jsx)(n.h3,{id:"slice",children:"slice"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(slice xs s e)\n> xs : Row a\n> s : Nat\n> e : Nat\n> a\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Similar to ",(0,r.jsx)(n.code,{children:"slash"}),", but doesn't pad with zeros. It returns a slice from index ",(0,r.jsx)(n.code,{children:"s"})," up to (but not including) index ",(0,r.jsx)(n.code,{children:"e"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"slice [1 2 3 4 5] 1 3    == [2 3]\nslice [1 2 3] 0 5        == [1 2 3]\nslice [1 2 3] 2 2        == []\n"})}),"\n",(0,r.jsx)(n.h3,{id:"chunks",children:"chunks"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(chunks n xs)\n> n  : Nat\n> xs : Row a\n> Row a\n"})}),"\n",(0,r.jsx)(n.p,{children:"Splits a row into chunks of a specified size."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"chunks 2 [1 2 3 4 5]    == [[1 2] [3 4] [5]]\nchunks 3 [1 2 3 4]      == [[1 2 3] [4]]\nchunks 5 [1 2 3]        == [[1 2 3]]\n"})}),"\n",(0,r.jsx)(n.h3,{id:"rep",children:"rep"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(rep x n)\n> x : a\n> n : Nat\n> Row a\n"})}),"\n",(0,r.jsx)(n.p,{children:"Creates a row by repeating a value a specified number of times."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"rep 3 2         == [3 3]\nrep b#aaab 3    == [b#aaab b#aaab b#aaab]\nrep [] 2        == [[] []]\n"})}),"\n",(0,r.jsx)(n.h3,{id:"rowindexed",children:"rowIndexed"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(rowIndexed xs)\n> xs : Row a\n> Row (Nat, a)\n"})}),"\n",(0,r.jsx)(n.p,{children:"Creates a row of pairs, where each pair contains the index and the corresponding element from the input row."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"rowIndexed [10 20 30]       == [[0 10] [1 20] [2 30]]\nrowIndexed [b#aba b#bab]    == [[0 b#aba] [1 b#bab]]\nrowIndexed []               == []\n"})}),"\n",(0,r.jsx)(n.h3,{id:"findidx",children:"findIdx"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(findIdx f xs d k)\n> f  : (a > Bool)\n> xs : Row a\n> d  : b\n> k  : (a > b)\n> a\n"})}),"\n",(0,r.jsx)(n.p,{children:"Finds the index of the first element in a row that satisfies a predicate function."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"findIdx (lte 5) [1 3 5 7 9] 0 id              == 2\nfindIdx (lte 10) [1 3 5 7 9] 0 id             == 0\nfindIdx even [1 3 5 7] {not found} showNat    == {not found}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"elemidx",children:"elemIdx"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(elemIdx e xs d k)\n> e  : a\n> xs : Row a\n> d  : a\n> k  : a\n> a\n"})}),"\n",(0,r.jsx)(n.p,{children:"Finds the index of the first occurrence of a specific element in a row."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"elemIdx 5 [1 3 5 7 5] b#{not found} id        == 2\nelemIdx b#a [b#b b#a b#c] b#{not found} id    == 1\nelemIdx 4 [1 2 3] b#{not found} id            == b#{not found}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"has",children:"has"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(has e xs)\n> e  : a\n> xs : Row a\n> Bool\n"})}),"\n",(0,r.jsx)(n.p,{children:"Checks if a row contains a specific element."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"has 3 [1 2 3 4 5]      == 1\nhas b#a [b#b b#c]      == 0\nhas [] [[1] [2] []]    == 1\n"})}),"\n",(0,r.jsx)(n.h3,{id:"rowand",children:"rowAnd"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(rowAnd xs)\n> xs : Row Bool\n> Bool\n"})}),"\n",(0,r.jsx)(n.p,{children:"Performs a logical AND operation on all elements of a row."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"rowAnd [TRUE TRUE FALSE]    == 0\nrowAnd [TRUE TRUE TRUE]     == 1\nrowAnd []                   == 1\n"})}),"\n",(0,r.jsx)(n.h3,{id:"rowor",children:"rowOr"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(rowOr xs)\n> xs : Row Bool\n> Bool\n"})}),"\n",(0,r.jsx)(n.p,{children:"Performs a logical OR operation on all elements of a row."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"rowOr [FALSE FALSE TRUE]     == 1\nrowOr [FALSE FALSE FALSE]    == 0\nrowOr []                     == 0\n"})}),"\n",(0,r.jsx)(n.h3,{id:"sum",children:"sum"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(sum xs)\n> xs : Row Nat\n> Nat\n"})}),"\n",(0,r.jsx)(n.p,{children:"Calculates the sum of all elements in a row."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"sum [1 2 3 4 5]          == 15\nsum [10 (sub 10 3) 3]    == 20\nsum []                   == 0\n"})}),"\n",(0,r.jsx)(n.h3,{id:"sumof",children:"sumOf"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(sumOf f xs)\n> f  : (a > Nat)\n> xs : Row a\n> Nat\n"})}),"\n",(0,r.jsx)(n.p,{children:"Applies a function to each element of a row and then calculates the sum of the results."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"sumOf (mul 2) [1 2 3 4]    == 20\nsumOf (pow 2) [1 2 3]      == 14\nsumOf id []                == 0\n"})}),"\n",(0,r.jsx)(n.h3,{id:"all",children:"all"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(all f xs)\n> f  : (a > Bool)\n> xs : Row a\n> Bool\n"})}),"\n",(0,r.jsx)(n.p,{children:"Checks if all elements in a row satisfy a given predicate."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"all even [2 4 6 8]     == 1\nall (lte 0) [1 2 3]    == 1\nall id []              == 1\n"})}),"\n",(0,r.jsx)(n.h3,{id:"any",children:"any"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(any f xs)\n> f  : (a > Bool)\n> xs : Row a\n> Bool\n"})}),"\n",(0,r.jsx)(n.p,{children:"Checks if any element in a row satisfies a given predicate."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"any odd [2 4 5 8]        == 1\nany (gte 0) [1 2 3 4]    == 0\nany id []                == 0\n"})}),"\n",(0,r.jsx)(n.h3,{id:"zip",children:"zip"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(zip xs ys)\n> xs : Row a\n> ys : Row b\n> Row (a, b)\n"})}),"\n",(0,r.jsx)(n.p,{children:"Combines two rows into a row of pairs."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"zip [1 2 3] [b#a b#b b#c]    == [[1 b#a] [2 b#b] [3 b#c]]\nzip [1 2] [b#a b#b b#c]      == [[1 b#a] [2 b#b]]\nzip [] [1 2 3]               == []\n"})}),"\n",(0,r.jsx)(n.h3,{id:"zipwith",children:"zipWith"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(zipWith f xs y)\n> f : (a > b > c)\n> xs : Row a\n> y : Row b\n> Row c\n"})}),"\n",(0,r.jsx)(n.p,{children:"Combines two rows using a given function."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"zipWith add [1 2 3] [4 5 6]                == [5 7 9]\nzipWith mul [1 2 3] [1 2 3]                == [1 4 9]\nzipWith zip [[1 2] [1 2]] [[3 4] [3 4]]    == [[[1 3] [2 4]] [[1 3] [2 4]]]\n"})}),"\n",(0,r.jsx)(n.h3,{id:"cat",children:"cat"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(cat x)\n> xs : Row (Row a)\n> Row a\n"})}),"\n",(0,r.jsx)(n.p,{children:"Concatenates a row of rows into a single row."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"cat [[1 2 3 4] [3 4] [5]]    == [1 2 3 4 5]\ncat [[] [1 2] [3]]           == [1 2 3]\ncat []                       == []\n"})}),"\n",(0,r.jsx)(n.h3,{id:"catmap",children:"catMap"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(catMap f x)\n> f  : (a > Row b)\n> xs : Row a\n> Row b\n"})}),"\n",(0,r.jsx)(n.p,{children:"Applies a function to each element of a row and concatenates the results."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"catMap (rep 2) [1 2 3]     == [2 2 2 2 2 2]\ncatMap id [[1 2] [3 4]]    == [1 2 3 4]\n"})}),"\n",(0,r.jsx)(n.h3,{id:"take",children:"take"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(take n x)\n> n  : Nat\n> xs : Row a\n> Row a\n"})}),"\n",(0,r.jsx)(n.p,{children:"Returns the first n elements of a row."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"take 3 [1 2 3 4 5]    == [1 2 3]\ntake 2 [b#a b#b]      == [b#a b#b]\ntake 5 [1 2 3]        == [1 2 3]\n"})}),"\n",(0,r.jsx)(n.h3,{id:"drop",children:"drop"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(drop n xs)\n> n  : Nat\n> xs : Row a\n> Row a\n"})}),"\n",(0,r.jsx)(n.p,{children:"Removes the first n elements from a row."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"drop 2 [1 2 3 4 5]          == [3 4 5]\ndrop 3 [b#a b#b b#c b#d]    == [b#d]\ndrop 5 [1 2 3]              == []\n"})}),"\n",(0,r.jsx)(n.h3,{id:"rev-1",children:"rev"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(rev xs)\n> xs : Row a\n> Row a\n"})}),"\n",(0,r.jsx)(n.p,{children:"Reverses the order of elements in a row."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"rev [1 2 3 4 5]          == [5 4 3 2 1]\nrev [b#a b#b b#c b#d]    == [b#d b#c b#b b#a]\nrev []                   == []\n"})}),"\n",(0,r.jsx)(n.h3,{id:"span",children:"span"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(span f xs)\n> f  : (a > Bool)\n> xs : Row a\n> Row (Row a)\n"})}),"\n",(0,r.jsx)(n.p,{children:"Splits a row into two parts: the longest prefix that satisfies a predicate and the rest."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"span (gte 3) [1 2 3 4 1 2 3 4]    == [[1 2 3] [4 1 2 3 4]]\nspan even [2 4 6 7 8 9]           == [[2 4 6] [7 8 9]]\nspan FALSE [1 2 3]                == [[] [1 2 3]]\n"})}),"\n",(0,r.jsx)(n.h3,{id:"splitat",children:"splitAt"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(splitAt i xs)\n> i  : Nat\n> xs : Row a\n> Row (Row a)\n"})}),"\n",(0,r.jsx)(n.p,{children:"Splits a row at a given index."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"splitAt 3 [1 2 3 4 5]    == [[1 2 3] [4 5]]\nsplitAt 0 [1 2 3]        == [[] [1 2 3]]\nsplitAt 5 [1 2 3]        == [[1 2 3] []]\n"})}),"\n",(0,r.jsx)(n.h3,{id:"intersperse",children:"intersperse"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(intersperse e xs)\n> e  : a\n> xs : Row a\n> Row a\n"})}),"\n",(0,r.jsx)(n.p,{children:"Intersperses an element between every element of a row."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"intersperse 0 [1 2 3]    == [1 0 2 0 3]\nintersperse b#a [b#b]    == [b#b]\nintersperse 0 []         == []\n"})}),"\n",(0,r.jsx)(n.h3,{id:"insert",children:"insert"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(insert i e xs)\n> i  : Nat\n> e  : a\n> xs : Row a\n> Row a\n"})}),"\n",(0,r.jsx)(n.p,{children:"Inserts an element at a specified index in a row."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"insert 1 b#x [b#a b#b b#c]    == [b#a b#x b#b b#c]\ninsert 0 1 [1 2 3]            == [1 1 2 3]\ninsert 3 4 [1 2 3]            == [1 2 3 4]\n"})}),"\n",(0,r.jsx)(n.h2,{id:"sorting-and-filtering",children:"Sorting and Filtering"}),"\n",(0,r.jsx)(n.h3,{id:"sort",children:"sort"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(sort xs)\n> xs : Row a\n> Row a\n"})}),"\n",(0,r.jsx)(n.p,{children:"Sorts a row in ascending order."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"sort [3 1 4 1 5]      == [1 1 3 4 5]\nsort [b#c b#a b#b]    == [b#a b#b b#c]\nsort []               == []\n"})}),"\n",(0,r.jsx)(n.h3,{id:"sortby",children:"sortBy"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(sortBy f xs)\n> f  : (a > Nat)\n> xs : Row a\n> Row a\n"})}),"\n",(0,r.jsx)(n.p,{children:"Sorts a row using a custom comparison function."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"sortBy (flip cmp) [1 3 2]      == [3 2 1]\nsortBy (cmp) [[1 2] [] [1]]    == [[] [1] [1 2]]\n"})}),"\n",(0,r.jsx)(n.h3,{id:"sorton",children:"sortOn"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(sortOn f xs)\n> f  : (a > b)\n> xs : Row a\n> Row b\n"})}),"\n",(0,r.jsx)(n.p,{children:"Sorts a row by applying a function to each element before comparing."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"sortOn (even) [1 3 2]             == [3 1 2]\nsortOn len [[1 2] [3] [4 5 6]]    == [[3] [1 2] [4 5 6]]\n"})}),"\n",(0,r.jsx)(n.h3,{id:"sortuniq",children:"sortUniq"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(sortUniq xs)\n> xs : Row a\n> Row a\n"})}),"\n",(0,r.jsx)(n.p,{children:"Sorts a row and removes duplicate elements."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"sortUniq [3 1 4 1 5 3]    == [1 3 4 5]\nsortUniq [b#a b#b b#a]    == [b#a b#b]\nsortUniq []               == []\n"})}),"\n",(0,r.jsx)(n.h3,{id:"filter",children:"filter"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(filter f xs)\n> f  : (a > Bool)\n> xs : Row a\n> Row a\n"})}),"\n",(0,r.jsx)(n.p,{children:"Keeps only the elements of a row that satisfy a predicate."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"filter even [1 2 3 4 5]               == [2 4]\nfilter (neq b#a) [b#a b#b b#a b#c]    == [b#b b#c]\nfilter (const TRUE) [1 2 3]           == [1 2 3]\n"})}),"\n",(0,r.jsx)(n.h3,{id:"delete",children:"delete"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(delete e xs)\n> e  : a\n> xs : Row a\n> Row a\n"})}),"\n",(0,r.jsx)(n.p,{children:"Removes all occurrences of a value from a row."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"delete 3 [1 2 3 4 3 5]      == [1 2 4 5]\ndelete b#a [b#a b#b b#a]    == [b#b]\ndelete 42 [1 2 3]           == [1 2 3]\n"})}),"\n",(0,r.jsx)(n.h3,{id:"findidxmany",children:"findIdxMany"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(findIdxMany f xs)\n> f  : (a > Bool)\n> xs : Row a\n> List a\n"})}),"\n",(0,r.jsx)(n.p,{children:"Finds all indices where a predicate is satisfied."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"findIdxMany even [1 2 3 4 5 6]         == [1 [3 [5 0]]]\nfindIdxMany (eql b#a) [b#a b#b b#a]    == [0 [2 0]]\nfindIdxMany (const FALSE) [1 2 3]      == 0\n"})}),"\n",(0,r.jsx)(n.h3,{id:"elemidxmany",children:"elemIdxMany"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(elemIdxMany e xs)\n> e  : a\n> xs : Row a\n> Either (List a) Nat\n"})}),"\n",(0,r.jsx)(n.p,{children:"Finds all indices where a specific element occurs."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"elemIdxMany 3 [1 2 3 4 3 5]      == [2 [4 0]]\nelemIdxMany b#a [b#a b#b b#a]    == [0 [2 0]]\nelemIdxMany 42 [1 2 3]           == 0\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(t,{...e})}):t(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>d});var r=s(6540);const i={},l=r.createContext(i);function a(e){const n=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);