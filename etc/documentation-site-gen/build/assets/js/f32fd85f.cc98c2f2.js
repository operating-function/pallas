"use strict";(self.webpackChunkpallas=self.webpackChunkpallas||[]).push([[163],{9347:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>i,contentTitle:()=>d,default:()=>p,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var r=a(4848),t=a(8453);const s={},d="Types",c={id:"reference/standard-library/types",title:"Types",description:"Type Tags",source:"@site/../../doc/reference/standard-library/13_types.md",sourceDirName:"reference/standard-library",slug:"/reference/standard-library/types",permalink:"/docs/reference/standard-library/types",draft:!1,unlisted:!1,editUrl:"https://github.com/operating-function/pallas/edit/main/doc/../../doc/reference/standard-library/13_types.md",tags:[],version:"current",sidebarPosition:13,frontMatter:{},sidebar:"referenceSidebar",previous:{title:"Bars (byte arrays)",permalink:"/docs/reference/standard-library/bars-byte-arrays"},next:{title:"Jets Reference",permalink:"/docs/reference/vm-and-interpreter/jets-reference"}},i={},l=[{value:"Type Tags",id:"type-tags",level:3},{value:"typeTag",id:"typetag",level:3},{value:"#datatype",id:"datatype",level:3},{value:"#datacase",id:"datacase",level:3},{value:"#record",id:"record",level:3}];function o(e){const n={code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"types",children:"Types"})}),"\n",(0,r.jsx)(n.h3,{id:"type-tags",children:"Type Tags"}),"\n",(0,r.jsx)(n.p,{children:"Encodings for primitive types."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"pinTag=0\nlawTag=1\nappTag=2\nnatTag=3\nbarTag=4\nrowTag=5\ntabTag=6\ncowTag=7\nsetTag=8\n"})}),"\n",(0,r.jsx)(n.h3,{id:"typetag",children:"typeTag"}),"\n",(0,r.jsx)(n.p,{children:"Returns the type tag of a given value."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"typeTag 42            == 3 ; natTag\ntypeTag [1 2 3]       == 5 ; rowTag\ntypeTag #[a=1 b=2]    == 6 ; tabTag\n"})}),"\n",(0,r.jsx)(n.h3,{id:"datatype",children:"#datatype"}),"\n",(0,r.jsx)(n.p,{children:"Macro for defining new datatypes."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"# datatype (Maybe a)\n* NONE\n* SOME x:a\n\n# datatype (List a)\n* NIL\n* CONS head:a tail:(List a)\n\n# datatype (Tree a)\n* LEAF val:a\n* NODE left:(Tree a) right:(Tree a)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"datacase",children:"#datacase"}),"\n",(0,r.jsx)(n.p,{children:"Macro for pattern matching on datatypes."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"# datacase (SOME 5)\n* NONE     0\n* (SOME x) x\n\n# datacase myList\n* NIL         0\n* (CONS x xs) (add x (length xs))\n\n# datacase myEither\n* (LEFT err)  (handleError err)\n* (RIGHT val) (processValue val)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"record",children:"#record"}),"\n",(0,r.jsx)(n.p,{children:"Macro for defining record types."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sire",children:"# record (Point2D)\n| POINT\n* x : Nat\n* y : Nat\n\n# record (Person)\n| PERSON\n* name : Str\n* age : Nat\n\n# record (Config a)\n| CONFIG\n* enabled : Bit\n* value : a\n"})})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>d,x:()=>c});var r=a(6540);const t={},s=r.createContext(t);function d(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);