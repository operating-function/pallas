"use strict";(self.webpackChunkpallas=self.webpackChunkpallas||[]).push([[725],{846:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>o,frontMatter:()=>a,metadata:()=>h,toc:()=>d});var r=n(4848),i=n(8453);const a={},l="Either",h={id:"reference/standard-library/either",title:"Either",description:"LEFT",source:"@site/../../doc/reference/standard-library/07_either.md",sourceDirName:"reference/standard-library",slug:"/reference/standard-library/either",permalink:"/reference/standard-library/either",draft:!1,unlisted:!1,editUrl:"https://github.com/operating-function/pallas/edit/main/doc/../../doc/reference/standard-library/07_either.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{},sidebar:"referenceSidebar",previous:{title:"Lists",permalink:"/reference/standard-library/lists"},next:{title:"Maybe",permalink:"/reference/standard-library/maybe"}},s={},d=[{value:"LEFT",id:"left",level:3},{value:"RIGHT",id:"right",level:3},{value:"fromLeft",id:"fromleft",level:3},{value:"unpackLeft",id:"unpackleft",level:3},{value:"fromRight",id:"fromright",level:3},{value:"unpackRight",id:"unpackright",level:3},{value:"eitherCase",id:"eithercase",level:3},{value:"eitherOpen",id:"eitheropen",level:3},{value:"eitherOpenLeft",id:"eitheropenleft",level:3},{value:"eitherCaseLeft",id:"eithercaseleft",level:3},{value:"eitherGetRight",id:"eithergetright",level:3},{value:"eitherGetLeft",id:"eithergetleft",level:3},{value:"eitherMap",id:"eithermap",level:3},{value:"eitherBind",id:"eitherbind",level:3},{value:"partition",id:"partition",level:3}];function c(e){const t={code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"either",children:"Either"})}),"\n",(0,r.jsx)(t.h3,{id:"left",children:"LEFT"}),"\n",(0,r.jsx)(t.p,{children:"Constructs a Left value in an Either type."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sire",children:"LEFT 1          == [0 1]\nLEFT b#hello    == [0 b#hello]\nLEFT NIL        == [0 0]\n"})}),"\n",(0,r.jsx)(t.h3,{id:"right",children:"RIGHT"}),"\n",(0,r.jsx)(t.p,{children:"Constructs a Right value in an Either type."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sire",children:"RIGHT 1          == [1 1]\nRIGHT b#hello    == [1 b#hello]\nRIGHT NIL        == [1 0]\n"})}),"\n",(0,r.jsx)(t.h3,{id:"fromleft",children:"fromLeft"}),"\n",(0,r.jsx)(t.p,{children:"Extracts the value from a Left, or returns a default value for a Right."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sire",children:"fromLeft 0 [0 2]          == 2\nfromLeft 0 ~[0 2]         == [2 0]\nfromLeft 1 (LEFT b#b)     == b#b\nfromLeft 1 (RIGHT b#b)    == (1 b#b)\n"})}),"\n",(0,r.jsx)(t.h3,{id:"unpackleft",children:"unpackLeft"}),"\n",(0,r.jsx)(t.p,{children:"Extracts the value from a Left, or crashes for a Right."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sire",children:'unpackLeft (LEFT 1)      == 1\nunpackLeft (LEFT b#a)    == b#a\nunpackLeft (RIGHT 1)     ; crashes with "Unexpected RIGHT"\n'})}),"\n",(0,r.jsx)(t.h3,{id:"fromright",children:"fromRight"}),"\n",(0,r.jsx)(t.p,{children:"Extracts the value from a Right, or returns a default value for a Left."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sire",children:"fromRight 0 (RIGHT 1)               == 1\nfromRight 0 (LEFT 1)                == (0 1)\nfromRight natBar (RIGHT b#right)    == b#right\nfromRight natBar (LEFT {left})      == b#left\n"})}),"\n",(0,r.jsx)(t.h3,{id:"unpackright",children:"unpackRight"}),"\n",(0,r.jsx)(t.p,{children:"Extracts the value from a Right, or crashes for a Left."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sire",children:'unpackRight (RIGHT 1)      == 1\nunpackRight (RIGHT b#a)    == b#a\nunpackRight (LEFT 1)       ; crashes with "Unexpected LEFT"\n'})}),"\n",(0,r.jsx)(t.h3,{id:"eithercase",children:"eitherCase"}),"\n",(0,r.jsx)(t.p,{children:"Pattern matches on an Either value, applying the appropriate function."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sire",children:"eitherCase [1 0] (add 1) (add 3)                     == 3\neitherCase (RIGHT 1) (add 1) (add 3)                 == 3\neitherCase [0 b#a] (const b#left) (const b#right)    == b#left\n"})}),"\n",(0,r.jsx)(t.h3,{id:"eitheropen",children:"eitherOpen"}),"\n",(0,r.jsx)(t.p,{children:"Pattern matches on an Either value, returning the value for a Right, or applying a function for a Left."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sire",children:"eitherOpen [0 2] (add 1)                 == [0 2]\neitherOpen [1 2] (add 1)                 == 3\neitherOpen (LEFT b#a) (const b#left)     == [0 b#a]\neitherOpen (RIGHT b#a) (const b#left)    == b#left\n"})}),"\n",(0,r.jsx)(t.h3,{id:"eitheropenleft",children:"eitherOpenLeft"}),"\n",(0,r.jsx)(t.p,{children:"Pattern matches on an Either value, returning the value for a Left, or applying a function for a Right."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sire",children:"eitherOpenLeft [0 2] (add 1)                  == 3\neitherOpenLeft [1 2] (add 1)                  == [1 2]\neitherOpenLeft (LEFT b#a) (const b#right)     == b#right\neitherOpenLeft (RIGHT b#a) (const b#right)    == [1 b#a]\n"})}),"\n",(0,r.jsx)(t.h3,{id:"eithercaseleft",children:"eitherCaseLeft"}),"\n",(0,r.jsx)(t.p,{children:"Pattern matches on an Either value, applying the appropriate function (opposite order of eitherCase)."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sire",children:"eitherCaseLeft [1 0] (add 1) (add 3)                      == 1\neitherCaseLeft (RIGHT 1) (add 1) (add 3)                  == 2\neitherCaseLeft [0 b#a] (const b#left) (const b#right)     == b#right\n"})}),"\n",(0,r.jsx)(t.h3,{id:"eithergetright",children:"eitherGetRight"}),"\n",(0,r.jsx)(t.p,{children:"Extracts the value from a Right, or applies a function to the Left value."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sire",children:"eitherGetRight (RIGHT 1) (add 1)             == 2\neitherGetRight (LEFT 1) (add 1)              == [0 1]\neitherGetRight (RIGHT b#a) (const b#left)    == b#left\n"})}),"\n",(0,r.jsx)(t.h3,{id:"eithergetleft",children:"eitherGetLeft"}),"\n",(0,r.jsx)(t.p,{children:"Extracts the value from a Left, or applies a function to the Right value."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sire",children:"eitherGetLeft (LEFT 1) (add 1)              == 2\neitherGetLeft (RIGHT 1) (add 1)             == [1 1]\neitherGetLeft (LEFT b#a) (const b#right)    == b#right\n"})}),"\n",(0,r.jsx)(t.h3,{id:"eithermap",children:"eitherMap"}),"\n",(0,r.jsx)(t.p,{children:"Applies a function to the value in a Right, leaving a Left unchanged."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sire",children:"eitherMap (add 2) (RIGHT 1)                     == (1 3)\neitherMap (add 2) (LEFT 1)                      == (0 1)\neitherMap (strWeld {hello_}) (RIGHT {world})    == (1 {hello_world})\n"})}),"\n",(0,r.jsx)(t.h3,{id:"eitherbind",children:"eitherBind"}),"\n",(0,r.jsx)(t.p,{children:"Applies a function that returns an Either to the value in a Right, leaving a Left unchanged."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sire",children:"eitherBind (RIGHT 1) (x & if (even x) (RIGHT (mul x 2)) (LEFT x))             == [0 1]\neitherBind (RIGHT 2) (x & if (even x) (RIGHT (mul x 2)) (LEFT x))             == [1 4]\neitherBind (RIGHT b#bye) (x & if (eql x b#hello) (RIGHT b#world) (LEFT x))    == [0 b#bye]\n"})}),"\n",(0,r.jsx)(t.h3,{id:"partition",children:"partition"}),"\n",(0,r.jsx)(t.p,{children:"Separates a row of Either values into two rows: one for Left values and one for Right values."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sire",children:"partition [[0 0] [1 1] [1 2] [0 3]]               == [[0 3] [1 2]]\npartition [LEFT-1 RIGHT-2 LEFT-3 RIGHT-4]         == [[1 3] [2 4]]\npartition [(RIGHT b#a) (LEFT b#b) (RIGHT b#c)]    == [[b#b] [b#a b#c]]\npartition []                                      == [[] []]\n"})})]})}function o(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>h});var r=n(6540);const i={},a=r.createContext(i);function l(e){const t=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function h(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),r.createElement(a.Provider,{value:t},e.children)}}}]);