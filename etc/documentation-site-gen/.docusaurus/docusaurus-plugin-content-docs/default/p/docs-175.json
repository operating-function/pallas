{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"explanationSidebar":[{"type":"link","label":"System Overview","href":"/docs/explanation/system-overview","docId":"explanation/system-overview","unlisted":false},{"type":"category","label":"PLAN","collapsed":false,"items":[{"type":"link","label":"Data Model","href":"/docs/explanation/plan-data-model","docId":"explanation/plan-data-model","unlisted":false},{"type":"link","label":"Evaluation Model","href":"/docs/explanation/plan-evaluation-model","docId":"explanation/plan-evaluation-model","unlisted":false}],"collapsible":true},{"type":"link","label":"VM and Interpreter","href":"/docs/explanation/vm-and-interpreter","docId":"explanation/vm-and-interpreter","unlisted":false},{"type":"link","label":"Sire and Rex","href":"/docs/explanation/sire-and-rex","docId":"explanation/sire-and-rex","unlisted":false}],"referenceSidebar":[{"type":"category","label":"Sire Standard Library","collapsed":true,"items":[{"type":"link","label":"Bits (Booleans)","href":"/docs/reference/standard-library/bits-booleans","docId":"reference/standard-library/bits-booleans","unlisted":false},{"type":"link","label":"Natural Numbers","href":"/docs/reference/standard-library/natural-numbers","docId":"reference/standard-library/natural-numbers","unlisted":false},{"type":"link","label":"Comparisons","href":"/docs/reference/standard-library/comparisons","docId":"reference/standard-library/comparisons","unlisted":false},{"type":"link","label":"Characters and Strings","href":"/docs/reference/standard-library/characters-strings","docId":"reference/standard-library/characters-strings","unlisted":false},{"type":"link","label":"Rows","href":"/docs/reference/standard-library/rows","docId":"reference/standard-library/rows","unlisted":false},{"type":"link","label":"Lists","href":"/docs/reference/standard-library/lists","docId":"reference/standard-library/lists","unlisted":false},{"type":"link","label":"Either","href":"/docs/reference/standard-library/either","docId":"reference/standard-library/either","unlisted":false},{"type":"link","label":"Maybe","href":"/docs/reference/standard-library/maybe","docId":"reference/standard-library/maybe","unlisted":false},{"type":"link","label":"Sets","href":"/docs/reference/standard-library/sets","docId":"reference/standard-library/sets","unlisted":false},{"type":"link","label":"KV Tables","href":"/docs/reference/standard-library/kv-tables","docId":"reference/standard-library/kv-tables","unlisted":false},{"type":"link","label":"Pads","href":"/docs/reference/standard-library/pads","docId":"reference/standard-library/pads","unlisted":false},{"type":"link","label":"Bars (byte arrays)","href":"/docs/reference/standard-library/bars-byte-arrays","docId":"reference/standard-library/bars-byte-arrays","unlisted":false},{"type":"link","label":"Types","href":"/docs/reference/standard-library/types","docId":"reference/standard-library/types","unlisted":false}],"collapsible":true}]},"docs":{"explanation/plan-data-model":{"id":"explanation/plan-data-model","title":"Data Model","description":"The previous section provided an overview of the system and how the different components contribute to its overall functioning. Let’s now take a closer look at each component, starting with PLAN.","sidebar":"explanationSidebar"},"explanation/plan-evaluation-model":{"id":"explanation/plan-evaluation-model","title":"Evaluation Model","description":"So far we’ve only looked at PLAN as inert data. We’ve hinted at dynamics, but we haven’t given any details. Let’s go through the rest of the specification chunk by chunk.","sidebar":"explanationSidebar"},"explanation/sire-and-rex":{"id":"explanation/sire-and-rex","title":"Sire and Rex","description":"Sire is a minimalist functional language that bootstraps itself from PLAN. Unlike PLAN, Sire aims to be realistic for humans to write. In service of this goal, it allows programmers to reference previously defined names in an environment, which it uses lambda lifting to eliminate when compiling itself to PLAN.","sidebar":"explanationSidebar"},"explanation/system-overview":{"id":"explanation/system-overview","title":"System Overview","description":"Pallas is a stack of technologies. At the bottom lies PLAN, an evaluation model. On top of PLAN we have two separate stacks: on one hand Rex and Sire allow programmers to implement programming languages which compile to PLAN, while a manifest format consisting of cogs and drivers is used to completely specify the behavior of a virtual machine that runs PLAN. We’ll start by explaining how these fit together on a high level, and then go into each one in detail.","sidebar":"explanationSidebar"},"explanation/vm-and-interpreter":{"id":"explanation/vm-and-interpreter","title":"VM and Interpreter","description":"PLAN is a standard for representing compute and data in the abstract; a PLAN expression is a specification of a program. We need to be able to turn such specifications into actual hardware operations. This is the job of a PLAN interpreter. A PLAN interpreter implements PLAN.","sidebar":"explanationSidebar"},"philosophy/philosopy-intro":{"id":"philosophy/philosopy-intro","title":"Philosophy","description":"Forthcoming"},"reference/plan/plan-reference":{"id":"reference/plan/plan-reference","title":"PLAN","description":"Forthcoming"},"reference/sire-runes-macros":{"id":"reference/sire-runes-macros","title":"Runes","description":"Runes are special symbols or characters that serve as syntactic markers for various language constructs and operations. Runes are a key part of flexible syntax system that is used by Sire, known as Rex (R-expressions), which allows for multiple ways to express the same code structure."},"reference/standard-library/bars-byte-arrays":{"id":"reference/standard-library/bars-byte-arrays","title":"Bars (byte arrays)","description":"Macro for creating ASCII bar literals.","sidebar":"referenceSidebar"},"reference/standard-library/bits-booleans":{"id":"reference/standard-library/bits-booleans","title":"Bits (Booleans)","description":"Type signatures are provisional and may contain errors.","sidebar":"referenceSidebar"},"reference/standard-library/characters-strings":{"id":"reference/standard-library/characters-strings","title":"Characters and Strings","description":"TODO: rectify ord and chr with REPL formatting; should results format as in the REPL?","sidebar":"referenceSidebar"},"reference/standard-library/comparisons":{"id":"reference/standard-library/comparisons","title":"Comparisons","description":"Type signatures are provisional and may contain errors.","sidebar":"referenceSidebar"},"reference/standard-library/either":{"id":"reference/standard-library/either","title":"Either","description":"LEFT","sidebar":"referenceSidebar"},"reference/standard-library/kv-tables":{"id":"reference/standard-library/kv-tables","title":"KV Tables","description":"Type signatures are provisional and may contain errors.","sidebar":"referenceSidebar"},"reference/standard-library/lists":{"id":"reference/standard-library/lists","title":"Lists","description":"Lists are zero-terminated, nested row 2-tuples. They are declared by prepending a ~ to what looks like row syntax, like this","sidebar":"referenceSidebar"},"reference/standard-library/maybe":{"id":"reference/standard-library/maybe","title":"Maybe","description":"NONE","sidebar":"referenceSidebar"},"reference/standard-library/natural-numbers":{"id":"reference/standard-library/natural-numbers","title":"Natural Numbers","description":"Type signatures are provisional and may contain errors.","sidebar":"referenceSidebar"},"reference/standard-library/pads":{"id":"reference/standard-library/pads","title":"Pads","description":"Pads are bit-strings encoded as non-zero natural numbers. Pads are not data-jetted, since the direct nat works perfectly. Pads are encoded least-significant-bit-first, with the high bit used to indicate the end of the bit-array.","sidebar":"referenceSidebar"},"reference/standard-library/rex":{"id":"reference/standard-library/rex","title":"Rex","description":"Forthcoming"},"reference/standard-library/rows":{"id":"reference/standard-library/rows","title":"Rows","description":"This page is under active development. It may contain bugs or incomplete descriptions.","sidebar":"referenceSidebar"},"reference/standard-library/sets":{"id":"reference/standard-library/sets","title":"Sets","description":"Type signatures are provisional and may contain errors.","sidebar":"referenceSidebar"},"reference/standard-library/types":{"id":"reference/standard-library/types","title":"Types","description":"Type Tags","sidebar":"referenceSidebar"},"reference/vm-and-interpreter/cogs-reference":{"id":"reference/vm-and-interpreter/cogs-reference","title":"Cogs Reference","description":"Forthcoming"},"reference/vm-and-interpreter/drivers-reference":{"id":"reference/vm-and-interpreter/drivers-reference","title":"Drivers Reference","description":"Forthcoming"},"reference/vm-and-interpreter/effects-reference":{"id":"reference/vm-and-interpreter/effects-reference","title":"Effects Reference","description":"Forthcoming"},"reference/vm-and-interpreter/jets-reference":{"id":"reference/vm-and-interpreter/jets-reference","title":"Jets Reference","description":"Forthcoming"},"reference/vm-and-interpreter/jobs-reference":{"id":"reference/vm-and-interpreter/jobs-reference","title":"Jobs Reference","description":"Forthcoming"},"tutorial/intro":{"id":"tutorial/intro","title":"Tutorial","description":"Forthcoming"}}}}